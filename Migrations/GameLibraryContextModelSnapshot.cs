// <auto-generated />
using System;
using GameLibrary.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GameLibrary.Migrations
{
    [DbContext(typeof(GameLibraryContext))]
    partial class GameLibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("GameLibrary.Model.Game", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("boxArt")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<bool>("enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("genreId")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("noOfPlayers")
                        .HasColumnType("int");

                    b.Property<string>("platform")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int?>("publisherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("releaseDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("genreId");

                    b.HasIndex("publisherId");

                    b.ToTable("games");
                });

            modelBuilder.Entity("GameLibrary.Model.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("publisher");
                });

            modelBuilder.Entity("GameLibrary.Model.genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<bool>("enable")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("genre");
                });

            modelBuilder.Entity("GameLibrary.Model.Game", b =>
                {
                    b.HasOne("GameLibrary.Model.genre", "genre")
                        .WithMany()
                        .HasForeignKey("genreId");

                    b.HasOne("GameLibrary.Model.Publisher", "publisher")
                        .WithMany()
                        .HasForeignKey("publisherId");
                });
#pragma warning restore 612, 618
        }
    }
}
